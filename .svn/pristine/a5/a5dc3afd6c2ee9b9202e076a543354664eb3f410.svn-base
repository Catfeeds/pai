{extend name="common/base" /}
{block name="style"}
<link rel="stylesheet" type="text/css" href="__CSS__/mescroll/mescroll.min.css">
<link rel="stylesheet" type="text/css" href="__CSS__/orderpai/conf_order.css">
<link rel="stylesheet" type="text/css" href="__CSS__/pay_result/pay_result.css">
<link rel="stylesheet" type="text/css" href="__CSS__/stroe/index.css">
<link rel="stylesheet" type="text/css" href="__CSS__/pop_rank/pop_rank.css">

{/block}
{block name="header"}
{include file="common/header" /}
{/block}
{block name="content"}
<main>
        <div class="conf_content">
            <div class="pay_ranking clear">
                <p class="lf">排名：<span>NO.{$info.pm_sort} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
                <p class="lf pay_val">目前人气值：<span>{$info.pm_popularity}</span></p>
            </div>
            <div class="conf_order_main clear">
                <div class="conf_order_img lf">
                    <img src="__STATIC__/image/index/pic_home_taplace@2x.png" data-original="__CDN_PATH__{$info.pg_s_img|default='/static/image/index/pic_home_taplace@2x.png'}">
                </div>
                <div class="conf_order_text lf">
                    <p>{$info.pg_name}</p>
                    <div class="conf_order_price clear">
                        <span class="conf_order_new">
                            ￥{$info.pm_paymoney}
                            <span>{$info.pg_market_price}</span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    <div class="pop_rank">
        <div class="pop_rank_view">
            <h3>好友点赞榜</h3>
            <div id="dataList"></div>
        </div>
    </div>
    <!-- <a href="/popularity/popularitygoods/new_people/pm_id/{$info.pm_id}"> -->
        <!-- <div class="pop_yaoqing_btn"  onclick="share(2)" >继续邀请</div> -->
    <!-- </a> -->

</main>
{/block}
{block name="script"}
{include file="common/js_sdk" /}
<script src="__JS__/mescroll/mescroll.min.js"></script>
<script>
    //创建MeScroll对象,内部已默认开启下拉刷新,自动执行up.callback,刷新列表数据;
    var mescroll = new MeScroll("body", {
        //下拉刷新
        down: {
            isLock: true, //锁定下拉
        },
        //上拉加载的配置项
        up: {
            callback: getListData, //上拉回调,此处可简写; 相当于 callback: function (page) { getListData(page); }
            isBounce: false, //此处禁止ios回弹,解析(务必认真阅读,特别是最后一点): http://www.mescroll.com/qa.html#q10
            noMoreSize: 1, //如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5
            empty: {
                icon: "/static/image/goods/no-cont.png", //图标,默认null
                tip: "暂无更多列表~", //提示
            },
            clearEmptyId: "dataList", //相当于同时设置了clearId和empty.warpId; 简化写法;默认null
            htmlLoading: '<p class="upwarp-progress mescroll-rotate"></p><p class="upwarp-tip">加载中..</p>', //上拉加载中的布局
            htmlNodata: '<p class="upwarp-nodata">我是有底线的~</p>', //无数据的布局
            toTop: {
                //配置回到顶部按钮
                src: "/static/image/application/mescroll-totop.png", //默认滚动到1000px显示,可配置offset修改
                //offset : 1000
            }
        }
    });

    /*联网加载列表数据  page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */
    function getListData(page) {
        //联网加载数据
        getListDataFromNet(page.num, page.size, function (curPageData,total_num) {
            //方法二(推荐): 后台接口有返回列表的总数据量 totalSize
            //必传参数(当前页的数据个数, 总数据量)
            mescroll.endBySize(curPageData.length, total_num);

            //设置列表数据
            setListData(curPageData);
        }, function () {
            //联网失败的回调,隐藏下拉刷新和上拉加载的状态;
            mescroll.endErr();
        });
    }

    /*设置列表数据*/
    function setListData(curPageData) {
        var listDom = document.getElementById("dataList");
        for (var i = 0; i < curPageData.length; i++) {
            var pd = curPageData[i];
            
            if (pd.num == '') {
                pd.num = '0';
            }
            if(pd.m_avatar==null||pd.m_avatar==""){
                pd.m_avatar='/static/image/index/moren.jpg'
            }
            // console.log(pd.m_avatar)
            var str = '<img class="lazy" src="'+ pd.m_s_avatar +'" />';
            str += '<p>'+ pd.m_name +'</p>';
            str += '<span>+'+ pd.pj_num +'人气值</span>';

            var liDom = document.createElement("div");
            liDom.className="pop_rank_list clear";
            liDom.innerHTML = str;
            listDom.appendChild(liDom);
           
            // $("img.lazy").lazyload({effect: "fadeIn"});
        }
        $(".lazy").on("error",function(){
            $(this).attr("src","/static/image/index/pic_home_taplace@2x.png")
        })
    }

    /*联网加载列表数据
    在您的实际项目中,请参考官方写法: http://www.mescroll.com/api.html#tagUpCallback
    请忽略getListDataFromNet的逻辑,这里仅仅是在本地模拟分页数据,本地演示用
    实际项目以您服务器接口返回的数据为准,无需本地处理分页.
    * */
    function getListDataFromNet(pageNum, pageSize, successCallback, errorCallback) {
        //延时一秒,模拟联网
        setTimeout(function () {
            $.ajax({
                type: 'post',
                url: '/popularity/popularityorder/get_joinner_list/pm_id/{$info.pm_id}/page/'+ pageNum +'/size/'+pageSize,
                dataType: 'json',
                success: function (data) {
                    var listData = [];
                    for (var i = 0; i < data.data.length; i++) {
                        listData.push(data.data[i]);
                    }

                    //回调
                    successCallback(listData,data.total_num);
                },
                error: errorCallback
            });
        }, 1000)
    }
   
</script>
{/block}