{extend name="common/base" /}
{block name="style"}
<link rel="stylesheet" type="text/css" href="__CSS__/promoters/frozen.css">
<link rel="stylesheet" type="text/css" href="__CSS__/mescroll/mescroll.min.css">
{/block}
{block name="header"}
<div class="header_nav">
    <div class="header_view">
        <div class="header_tit">
            <span>资金冻结明细</span>
            <div class="header_back" {empty name='header_path' } onClick="javascript:history.back();" {else
            /} onClick="javascript:window.location.href='{$header_path}'" {/empty} >
            <img src="__STATIC__/icon/publish/icon_nav_back@2x.png" name='out' class="smt">
        </div>
    </div>
</div>
{/block}
{block name="content"}
<main>
    <div class="dataList">
        <ul class="main_content" id="dataList">
            <!--<li class="main_item clear">-->
            <!--<div class="lf">-->
            <!--<p class="mian_item_ori">冻结资金观望奖</p>-->
            <!--<p class="main_item_data">07-06 10:11</p>-->
            <!--</div>-->
            <!--<div class="lf">-->
            <!--<p class="main_name">亨利大王</p>-->
            <!--<p class="main_dengji">普通会员</p>-->
            <!--</div>-->
            <!--<div >-->
            <!--<span class="main_num">+1.02</span>-->
            <!--</div>-->
            <!--</li>-->
        </ul>
    </div>
</main>
{/block}
{block name="script"}
{include file="common/js_sdk" /}
<script src="__JS__/mescroll/mescroll.min.js"></script>
<script>
    $(function () {
        //创建MeScroll对象,内部已默认开启下拉刷新,自动执行up.callback,刷新列表数据;
        var mescroll = new MeScroll("body", {
            //下拉刷新
            down: {
                isLock: true, //锁定下拉
            },
            page: {
                size: 6
            },
            //上拉加载的配置项
            up: {
                callback: getListData, //上拉回调,此处可简写; 相当于 callback: function (page) { getListData(page); }
                isBounce: false, //此处禁止ios回弹,解析(务必认真阅读,特别是最后一点): http://www.mescroll.com/qa.html#q10
                noMoreSize: 1, //如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5
                empty: {
                    // icon: "/static/image/goodscollection/shoucang@2x.png", //图标,默认null
                    tip: "暂无信息~", //提示
                },
                clearEmptyId: "dataList", //相当于同时设置了clearId和empty.warpId; 简化写法;默认null
                htmlLoading: '<p class="upwarp-progress mescroll-rotate"></p><p class="upwarp-tip">加载中..</p>', //上拉加载中的布局
                htmlNodata: '<p class="upwarp-nodata">我是有底线的~</p>', //无数据的布局
                toTop: {
                    //配置回到顶部按钮
                    src: "/static/image/application/mescroll-totop.png", //默认滚动到1000px显示,可配置offset修改
                    //offset : 1000
                }
            }
        });

        /*联网加载列表数据  page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */
        function getListData(page) {
            //联网加载数据
            getListDataFromNet(page.num, page.size, function (curPageData, totle_num) {
                //方法二(推荐): 后台接口有返回列表的总数据量 totalSize
                //必传参数(当前页的数据个数, 总数据量)
                mescroll.endBySize(curPageData.length, totle_num);

                //设置列表数据
                setListData(curPageData);
            }, function () {
                //联网失败的回调,隐藏下拉刷新和上拉加载的状态;
                mescroll.endErr();
            });
        }

        /*设置列表数据*/
        function setListData(curPageData) {
            var listDom = document.getElementById("dataList");
            for (var i = 0; i < curPageData.length; i++) {
                var pd = curPageData[i];

                // var html = '<li class="main_item clear">';
                var html = '<div class="lf">';
                html += '<p class="mian_item_ori">' + pd.reason + '</p>';
                html += '<p class="main_item_data">'+ pd.add_time+ '</p>';
                html += '</div>';
                html += '<div class="lf">';
                html += '<p class="main_name">'+ pd.m_name+'</p>';
                html += '<p class="main_dengji">'+ pd.ml_name+'</p>';
                html += '</div>';
                html += '<div class="rt">';
                html += '<span class="main_num">+'+ pd.money+ '</span>';
                html += '</div>';
                // html += ' </li>';

                // listDom.innerHTML = html;
                var liDom = document.createElement("li");
                // liDom.setAttribute('href','/pointpai/Pointgoods/index/g_id/'+pd.g_id);
                liDom.className = 'main_item clear';
                liDom.innerHTML = html;
                listDom.appendChild(liDom);
            }
        }

        /*联网加载列表数据
         在您的实际项目中,请参考官方写法: http://www.mescroll.com/api.html#tagUpCallback
         请忽略getListDataFromNet的逻辑,这里仅仅是在本地模拟分页数据,本地演示用
         实际项目以您服务器接口返回的数据为准,无需本地处理分页.
         * */
        function getListDataFromNet(pageNum, pageSize, successCallback, errorCallback) {
            //延时一秒,模拟联网
            setTimeout(function () {
                $.ajax({
                    type: 'post',
                    url: '/member/promoters/ajax_frozen_money/page/' + pageNum + '/page_size/' + pageSize,
                    dataType: 'json',
                    success: function (data) {
                        var listData = [];
                        for (var i = 0; i < data.list.length; i++) {
                            listData.push(data.list[i]);
                        }
                        console.log(pageNum, pageSize);
                        //回调
                        successCallback(listData, data.totle_num);
                    },
                    error: errorCallback
                });
            }, 1000)
        }
    })

</script>
{/block}