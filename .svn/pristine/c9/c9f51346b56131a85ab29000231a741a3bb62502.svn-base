{extend name="common/base" /} {block name="style"}
<link rel="stylesheet" type="text/css" href="__CSS__/mescroll/mescroll.min.css">
<link rel="stylesheet" type="text/css" href="__CSS__/swiper/swiper-3.3.1.min.css">
<link rel="stylesheet" type="text/css" href="__CSS__/goods/my_publish1.css">
<!--<link rel="stylesheet" type="text/css" href="__CSS__/orderpai/zhifu.css">-->
<link rel="stylesheet" type="text/css" href="__CSS__/goods/search_index.css">{/block} {block name="header"} {include file="common/header" /} {/block} {block name="content"}
<main>
    <div class="my_goods_search_img">
        <img src="__STATIC__/image/goods/icon_nav_sousuo@2x.png" alt=""/>
    </div>
    <form action="/member/Orderpai/seller_order_search" method="post">
        <div class="index_search_pop">
            <!--搜索框-->
            <div class="index_search_pop_top clear">
                <div class="index_pop_text lf">
                    <img src="__STATIC__/icon/publish/icon_nav_back@2x.png" alt=""/>
                </div>
                <div class="index_search_pop_view clear lf">
                    <div class="index_search_lfimg" class="lf">
                        <img src="__STATIC__/image/index/searchbar_icon_search@2x.png">
                    </div>
                    <input type="text" name="keyword" class="index_pop_inp lf">

                    <div class="index_search_cancel rt">
                        <img src="__STATIC__/image/index/icon_search_clear@2x.png" alt="">
                    </div>
                </div>
                <button type="submit" class="index_pop_sousuo rt"> 搜索</button>
            </div>
            {notempty name='$searchs.self'}
            <!--历史搜索-->
            <div class="index_pop_history_view history">
                <div class="index_pop_history clear">
                    <p class="lf">历史搜索</p>

                    <div class="rt del_search">清除</div>
                </div>
                <div class="index_pop_history_main clear">
                    {volist name='searchs.self' id='vo'}
                    <div class="lf">{$vo}</div>
                    {/volist}
                </div>
            </div>
            {/notempty}
            <!--搜索出的列表-->
            <div class="index_pop_search_main">
                <ul class="index_pop_search_ul">

                </ul>
            </div>
        </div>
    </form>
    <!--我团中的 导航-->
    <!--菜单 需加上mescroll-touch-x,原因: http://www.mescroll.com/qa.html#q10 -->
    <div class="top-nav">
        <div class="scrollx mescroll-touch-x">
            <div id="scrollxContent" class="scrollx-content">
                <ul id="nav" class="nav tab-nav">
                    <li {if condition="$i == 0"}class="active"{/if} i="0">全部</li>
                    <li {if condition="$i == 1"}class="active"{/if} i="1">待发货</li>
                    <li {if condition="$i == 2"}class="active"{/if} i="2">已发货</li>
                    <li {if condition="$i == 3"}class="active"{/if} i="3">已完成</li>
                    <!--<li {if condition="$i == 4"}class="active"{/if} i="4">退款/售后</li>-->
                </ul>
            </div>
        </div>
    </div>

    <!--轮播-->
    <div id="swiper" class="swiper-container">
        <div id="swiperWrapper" class="swiper-wrapper">

            <!--全部-->
            <div id="mescroll0" class="swiper-slide mescroll">
                <ul id="dataList0" class="data-list">
                </ul>
            </div>

            <!--待发货-->
            <div id="mescroll1" class="swiper-slide mescroll">
                <ul id="dataList1" class="data-list"> </ul>
            </div>

            <!--已发货-->
            <div id="mescroll2" class="swiper-slide mescroll">
                <ul id="dataList2" class="data-list"> </ul>
            </div>

            <!--已完成-->
            <div id="mescroll3" class="swiper-slide mescroll">
                <ul id="dataList3" class="data-list"> </ul>
            </div>
        </div>
    </div>
</main>
{/block} {block name="script"}
{include file="common/js_sdk" /}
<script src="__JS__/Public.js"></script>
<script src="__JS__/mescroll/mescroll.min.js"></script>
<script src="__JS__/swiper/swiper-3.3.1.min.js"></script>
<script type="text/javascript" charset="utf-8">

</script>
<script type="text/javascript" charset="utf-8">
    $(function(){
        /**
         * status:0没有数据了，1有数据
         * msg:返回信息
         * data:返回数据
         *
         * 返回值：
         *o_id: 订单编号
         *store_id: 店铺id
         *o_money: 订单的折拍金额
         *o_paystate: 订单金钱状态
         *o_state: 订单的流程状态
         *gp_id: 商品id
         *gp_num: 拍卖数量
         *o_addtime: 订单添加时间
         *o_paytime: 付款时间
         *o_totalmoney: 订单总金额
         *gdr_id: 折拍id
         *o_periods: 第几期
         *o_isdelete: 是否删除
         *o_gp_settlement_price: 订单的商品折拍价格
         *gp_market_price: 商品的市场价格
         *g_id: 商品id
         *gp_img: 商品图片
         *g_name: 商品名称
         *g_endtime: 商品的最后截止时间
         *pai_num: 抽奖码的个数
         *o_publishtime: 当期的团中公布时间
         *award_m_avatar: 团中者头像
         *award_m_name: 团中者昵称
         *award_m_name_secret: 团中者昵称（保密）
         *
         *
         * 条件判断：
         * 等待发货： o_status == 2
         * 已发货：    o_status == 3
         * 待评价：   o_status == 4
         * 已完成：   o_status == 5
         */
        $(".my_goods_search_img").click(function(){
            $(".index_search_pop").addClass("index_pop_block");
            $(".index_search_pop_view input").focus();
        })
        //点击叉号
        $(".index_search_cancel").click(function () {
            $(this).siblings("input").val("");
            $(this).siblings("input").focus();
            $(".index_pop_search_li").css({ display: "block" });
        })
        //点击取消
        $(".index_pop_text").click(function () {
            $(".index_search_pop").removeClass("index_pop_block");
        })
        var i = "{$i}";
        $('#nav').find('p').eq(i).addClass('active');
        var curNavIndex = i;//全部0; 出售中1; 草稿箱2; 审核中3; 已失败4;
        var mescrollArr = new Array(4);//5个菜单所对应的5个mescroll对象
        //初始化首页
        mescrollArr[i] = initMescroll("mescroll" + i, "dataList" + i);
        /*初始化轮播*/
        var swiper = new Swiper('#swiper', {
            initialSlide: i,
            onTransitionEnd: function (swiper) {
                var i = swiper.activeIndex;//轮播切换完毕的事件
                changePage(i);
            }
        });
        /*初始化菜单*/
        $("#nav li").click(function () {
            var i = Number($(this).attr("i"));
            swiper.slideTo(i);//以轮播的方式切换列表
        })
        /*切换列表*/
        function changePage(i) {
            if (curNavIndex != i) {
                //更改列表条件
                $("#nav li").each(function (n, dom) {
                    if (dom.getAttribute("i") == i) {
                        dom.classList.add("active");
                    } else {
                        dom.classList.remove("active");
                    }
                })
                //隐藏当前回到顶部按钮
                mescrollArr[curNavIndex].hideTopBtn();
                //取出菜单所对应的mescroll对象,如果未初始化则初始化
                if (mescrollArr[i] == null) {
                    mescrollArr[i] = initMescroll("mescroll" + i, "dataList" + i);
                } else {
                    //检查是否需要显示回到到顶按钮
                    var curMescroll = mescrollArr[i];
                    var curScrollTop = curMescroll.getScrollTop();
                    if (curScrollTop >= curMescroll.optUp.toTop.offset) {
                        curMescroll.showTopBtn();
                    } else {
                        curMescroll.hideTopBtn();
                    }
                }
                //更新标记
                curNavIndex = i;
            }
        }
        /*创建MeScroll对象*/
        function initMescroll(mescrollId, clearEmptyId) {
            //创建MeScroll对象,内部已默认开启下拉刷新,自动执行up.callback,刷新列表数据;
            var mescroll = new MeScroll(mescrollId, {
                //下拉刷新
                down: {
                    isLock: true, //锁定下拉
                },
                //上拉加载的配置项
                up: {
                    callback: getListData, //上拉回调,此处可简写; 相当于 callback: function (page) { getListData(page); }
                    isBounce: false, //此处禁止ios回弹,解析(务必认真阅读,特别是最后一点): http://www.mescroll.com/qa.html#q10
                    noMoreSize: 1, //如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5
                    empty: {
                        icon: "/static/image/goods/no-cont.png", //无数据图片
                        tip: "这里什么也没有哦", //提示
                    },
                    clearEmptyId: clearEmptyId, //相当于同时设置了clearId和empty.warpId; 简化写法;默认null
                    htmlLoading: '<p class="upwarp-progress mescroll-rotate"></p><p class="upwarp-tip">加载中..</p>', //上拉加载中的布局
                    htmlNodata: '<p class="upwarp-nodata">我是有底线的~</p>', //无数据的布局
                    toTop: { //配置回到顶部按钮
                        src: "/static/image/application/mescroll-totop.png", //默认滚动到1000px显示,可配置offset修改
                    }
                }
            });
            return mescroll;
        }
        /*联网加载列表数据  page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */
        function getListData(page) {
            //联网加载数据
            var dataIndex = curNavIndex; //记录当前联网的nav下标,防止快速切换时,联网回来curNavIndex已经改变的情况;
            getListDataFromNet(dataIndex, page.num, page.size, function (pageData) {
                //联网成功的回调,隐藏下拉刷新和上拉加载的状态;
                //mescroll会根据传的参数,自动判断列表如果无任何数据,则提示空;列表无下一页数据,则提示无更多数据;
                //console.log("dataIndex=" + dataIndex + ", curNavIndex=" + curNavIndex + ", page.num=" + page.num + ", page.size=" + page.size + ", pageData.length=" + pageData.length);

                //方法四 (不推荐),会存在一个小问题:比如列表共有20条数据,每页加载10条,共2页.如果只根据当前页的数据个数判断,则需翻到第三页才会知道无更多数据,如果传了hasNext,则翻到第二页即可显示无更多数据.
                mescrollArr[dataIndex].endSuccess(pageData.length);

                //设置列表数据
                setListData(pageData, dataIndex);
            }, function () {
                //联网失败的回调,隐藏下拉刷新和上拉加载的状态;
                mescrollArr[dataIndex].endErr();
            });
        }
        /*设置列表数据
         * pageData 当前页的数据
         * dataIndex 数据属于哪个nav */
        function setListData(pageData, dataIndex) {
            var listDom = document.getElementById("dataList" + dataIndex);
            for (var i = 0; i < pageData.length; i++) {
                var pd = pageData[i];
                var hf;
                var btn;
                if (pd.o_state == 5) {
                    hf = '<span class="my_publish_hint rt">已完成</span>';
                    btn = '<a href="/member/goods/index/o_id/'+pd.o_id+'"><div class="my_publish_modification rt">再次上架</div></a>';
                } else if (pd.o_state == 4) {
                    hf = '<span class="my_publish_hint rt my_publish_black">待评价</span>';
                    btn = '<div class="my_publish_share rt"><a href="/member/orderpai/order_logistics/o_id/'+pd.o_id+'/is_seller/1"><span>发货信息</span></a></div>';
                } else if (pd.o_state == 3) {
                    hf = '<span class="my_publish_hint rt">已发货</span>';
                    btn = '<a href="/member/orderpai/order_logistics/o_id/'+pd.o_id+'/is_seller/1"><div class="my_publish_share rt">发货信息</div></a>';
                } else if (pd.o_state == 2) {
                    hf = '<span class="my_publish_hint rt">等待发货</span>';
                    btn= '<div class="my_publish_modification rt"><a href="/member/Orderpai/new_logistics/o_id/'+ pd.o_id+'"><span>立即发货</span></a></div>';
                }
                var str = '<div class="my_publish_tit clear">';
                str += '<a href="/member/shop/index/store_id/'+pd.store_id+'"><span class="my_publish_bh lf">';
                str += '<img src="' + pd.award_m_avatar + '" alt="">' + pd.award_m_name + '</span></a>';
                str += hf;
                str += '</div>';
                str += '<a href="/member/orderpai/sell_goods_info/o_id/'+ pd.o_id +'">';
                str += '<div class="my_publish_main clear">';
                str += '<div class="my_publish_img lf">';
                str += '<img src="' + pd.gp_img + '">';
                str += '</div>';
                str += '<div class="my_publish_text lf">';
                str += '<p>' + pd.g_name + '</p>';
                str += '<div class="my_publish_price clear">';
                str += '<span class="my_publish_new">￥' + pd.min_price + '~' + pd.max_price + '</span>';
                str += '<span class="my_publish_inventory rt">x';
                str += '<span>' + pd.gp_num + '</span>';
                str += '</span>';
                str += '</div>';
                str += '</div>';
                str += '</div>';
                str += '</a>';
                str += '<div class="my_publish_data clear">';
                str += '<p class="lf">含' + pd.pai_num + '份幸运码</p>';
                str += '<p class="rt">' + msToDate(pd.g_endtime * 1000).wasTime + '<span> 后截止</span></p>';
                str += '</p>';
                str += '</div>';
                str += '<div class="my_publish_btn clear">';
                str += '结算价￥' + pd.o_gp_settlement_price;
                str += btn;
                str += '</div>';
                var liDom = document.createElement("div");
                liDom.className = 'my_publish_list shop_tr' + pd.g_id;
                liDom.innerHTML = str;
                listDom.appendChild(liDom);
            }
        }

        /*联网加载列表数据
         在您的实际项目中,请参考官方写法: http://www.mescroll.com/api.html#tagUpCallback
         请忽略getListDataFromNet的逻辑,这里仅仅是在本地模拟分页数据,本地演示用
         实际项目以您服务器接口返回的数据为准,无需本地处理分页.
         * */
        function getListDataFromNet(curNavIndex, pageNum, pageSize, successCallback, errorCallback) {

            //延时一秒,模拟联网
            setTimeout(function () {
                $.ajax({
                    type: 'post',
                    url: '/member/orderpai/get_sell_list/',
                    dataType: 'json',
                    data:{i:curNavIndex,page:pageNum,page_size:pageSize},
                    success: function (data) {
                        var listData = [];
                        for (var i = 0; i < data.data.length; i++) {
                            listData.push(data.data[i]);
                        }

                        //回调
                        successCallback(listData);
                    },
                    error: errorCallback
                });
            }, 500)
        }
    })

</script>
{/block}